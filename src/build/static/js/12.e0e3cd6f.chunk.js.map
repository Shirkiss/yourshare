{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-confirm-sign-in_8.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","AmplifyConfirmSignIn","AmplifyConfirmSignUp","AmplifyForgotPassword","AmplifyRequireNewPassword","AmplifySignIn","AmplifySignUp","AmplifyToast","AmplifyVerifyContact","_index_82dae9d1_js__WEBPACK_IMPORTED_MODULE_0__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__","_auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_4__","_Translations_baba3f2c_js__WEBPACK_IMPORTED_MODULE_5__","_constants_3e1b5fcc_js__WEBPACK_IMPORTED_MODULE_6__","_aws_amplify_auth__WEBPACK_IMPORTED_MODULE_7__","_helpers_9dae6f2a_js__WEBPACK_IMPORTED_MODULE_8__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","Array","k","a","j","jl","hostRef","_this","Object","handleSubmit","event","confirm","headerText","get","CONFIRM_SMS_CODE","submitButtonText","CONFIRM","handleAuthStateChange","formFields","type","required","handleInputChange","handleCodeChange","mfaOption","SMS","loading","prototype","componentWillLoad","user","SoftwareTokenMFA","TOTP","CONFIRM_TOTP_CODE","code","target","checkContact","verifiedContact","Error","data","verified","assign","VerifyContact","SignedIn","mfaType","error_1","_a","preventDefault","confirmSignIn","render","secondaryFooterContent","variant","onClick","SignIn","BACK_TO_SIGN_IN","confirmSignUp","CONFIRM_SIGN_UP_HEADER_TEXT","CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT","usernameAlias","userInput","username","_signUpAttrs","signUpAttrs","newFormFields","buildFormFields","formFieldsHandler","buildDefaultFormFields","handleFormFieldInputChange","disabled","CONFIRM_SIGN_UP_CODE_LABEL","placeholder","CONFIRM_SIGN_UP_CODE_PLACEHOLDER","hint","CONFIRM_SIGN_UP_LOST_CODE","resendConfirmCode","CONFIRM_SIGN_UP_RESEND_CODE","newFields_1","forEach","field","newField","handleFormFieldInputWithCallback","fieldType","cb","bind","error_2","resendSignUp","ConfirmSignUp","confirmSignUpResult","error_3","_b","signIn","password","defineProperty","enumerable","configurable","logger","RESET_YOUR_PASSWORD","SEND_CODE","handleSend","send","submit","delivery","phoneNumber","countryDialCodeValue","phoneNumberValue","forgotPasswordAttrs","inputProps","data-test","handlePhoneNumberChange","name","error_4","forgotPassword","debug","NEW_PASSWORD_LABEL","NEW_PASSWORD_PLACEHOLDER","CodeDeliveryDetails","error_5","forgotPasswordSubmit","submitFn","testDataPrefix","logger$1","CHANGE_PASSWORD","CHANGE_PASSWORD_ACTION","completeNewPassword","Password","handlePasswordChange","requiredAttributes","handleRequiredAttributeInputChange","attribute","challengeParam","formField","error_6","error_7","challengeName","SMSMFA","ConfirmSignIn","MFASetup","TOTPSetup","logger$2","SIGN_IN_HEADER_TEXT","SIGN_IN_ACTION","signInAttributes","error_8","NewPasswordRequired","ResetPassword","CustomChallenge","trigger","CustomConfirmSignIn","ForgotPassword","formFieldInputs","FORGOT_PASSWORD_TEXT","RESET_PASSWORD_TEXT","newFields_2","federated","slot","class","NO_ACCOUNT_TEXT","SignUp","CREATE_ACCOUNT_TEXT","style","display","signUp","SIGN_UP_HEADER_TEXT","SIGN_UP_SUBMIT_BUTTON_TEXT","haveAccountText","SIGN_UP_HAVE_ACCOUNT_TEXT","signInText","SIGN_IN_TEXT","signUpAttributes","attributes","email","error_9","phone_number","SIGN_UP_EMAIL_PLACEHOLDER","SIGN_UP_PASSWORD_PLACEHOLDER","SIGN_UP_USERNAME_PLACEHOLDER","newFields_3","message","handleClose","logger$3","verifyAttr","verify","contact","attr","error_10","verifyCurrentUserAttributeSubmit","error","error_11","verifyCurrentUserAttribute","inputName","renderSubmit","autocomplete","CODE_PLACEHOLDER","renderVerify","unverified","VERIFY_CONTACT_EMAIL_LABEL","key","VERIFY_CONTACT_PHONE_LABEL","VERIFY_CONTACT_HEADER_TEXT","VERIFY_CONTACT_SUBMIT_LABEL","VERIFY_CONTACT_VERIFY_LABEL"],"mappings":"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","file":"static/js/12.e0e3cd6f.chunk.js","sourcesContent":["var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { r as registerInstance, h } from './index-82dae9d1.js';\nimport { I18n, isEmpty, Logger, ConsoleLogger } from '@aws-amplify/core';\nimport { M as MfaOption, C as ChallengeName, A as AuthState, a as AuthFormField } from './auth-types-78df304e.js';\nimport { T as Translations } from './Translations-baba3f2c.js';\nimport { N as NO_AUTH_MODULE_FOUND, C as COUNTRY_DIAL_CODE_DEFAULT, e as COUNTRY_DIAL_CODE_SUFFIX, f as PHONE_SUFFIX } from './constants-3e1b5fcc.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent, c as checkUsernameAlias, i as isHintValid, b as composePhoneNumberInput, r as requiredAttributesMap } from './helpers-9dae6f2a.js';\n\nvar AmplifyConfirmSignIn =\n/** @class */\nfunction () {\n  function AmplifyConfirmSignIn(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Fires when confirm sign in form is submitted */\n\n    this.handleSubmit = function (event) {\n      return _this.confirm(event);\n    };\n    /** Used for header text in confirm sign in component */\n\n\n    this.headerText = I18n.get(Translations.CONFIRM_SMS_CODE);\n    /** Used for the submit button text in confirm sign in component */\n\n    this.submitButtonText = I18n.get(Translations.CONFIRM);\n    /** Auth state change handler for this component */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /**\n     * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n     * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n     * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n     * ```\n     * [\n     *  {\n     *    type: string,\n     *    label: string,\n     *    placeholder: string,\n     *    hint: string | Functional Component | null,\n     *    required: boolean\n     *  }\n     * ]\n     * ```\n     */\n\n    this.formFields = [{\n      type: 'code',\n      required: true,\n      handleInputChange: function handleInputChange(event) {\n        return _this.handleCodeChange(event);\n      }\n    }];\n    /** The MFA option to confirm with */\n\n    this.mfaOption = MfaOption.SMS;\n    /* Whether or not the confirm-sign-in component is loading */\n\n    this.loading = false;\n  }\n\n  AmplifyConfirmSignIn.prototype.componentWillLoad = function () {\n    if (this.user && this.user['challengeName'] === ChallengeName.SoftwareTokenMFA) {\n      this.mfaOption = MfaOption.TOTP; // If header text is using default use TOTP string\n\n      if (this.headerText === I18n.get(Translations.CONFIRM_SMS_CODE)) {\n        this.headerText = I18n.get(Translations.CONFIRM_TOTP_CODE);\n      }\n    }\n  };\n\n  AmplifyConfirmSignIn.prototype.handleCodeChange = function (event) {\n    this.code = event.target.value;\n  };\n\n  AmplifyConfirmSignIn.prototype.checkContact = function (user) {\n    var _this = this;\n\n    if (!Auth || typeof Auth.verifiedContact !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    Auth.verifiedContact(user).then(function (data) {\n      if (!isEmpty(data.verified)) {\n        _this.handleAuthStateChange(AuthState.SignedIn, user);\n      } else {\n        user = Object.assign(user, data);\n\n        _this.handleAuthStateChange(AuthState.VerifyContact, user);\n      }\n    });\n  };\n\n  AmplifyConfirmSignIn.prototype.confirm = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mfaType, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            mfaType = this.user['challengeName'] === ChallengeName.SoftwareTokenMFA ? ChallengeName.SoftwareTokenMFA : null;\n\n            if (!Auth || typeof Auth.confirmSignIn !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.confirmSignIn(this.user, this.code, mfaType)];\n\n          case 2:\n            _a.sent();\n\n            this.checkContact(this.user);\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_1 = _a.sent();\n            dispatchToastHubEvent(error_1);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyConfirmSignIn.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      handleSubmit: this.handleSubmit,\n      submitButtonText: this.submitButtonText,\n      loading: this.loading,\n      secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.SignIn);\n        }\n      }, I18n.get(Translations.BACK_TO_SIGN_IN)))\n    }, h(\"amplify-auth-fields\", {\n      formFields: this.formFields\n    }));\n  };\n\n  return AmplifyConfirmSignIn;\n}();\n\nvar AmplifyConfirmSignUp =\n/** @class */\nfunction () {\n  function AmplifyConfirmSignUp(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Fires when sign up form is submitted */\n\n    this.handleSubmit = function (event) {\n      return _this.confirmSignUp(event);\n    };\n    /** Used for header text in confirm sign up component */\n\n\n    this.headerText = I18n.get(Translations.CONFIRM_SIGN_UP_HEADER_TEXT);\n    /** Used for the submit button text in confirm sign up component */\n\n    this.submitButtonText = I18n.get(Translations.CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT);\n    /**\n     * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n     * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n     * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n     * ```\n     * [\n     *  {\n     *    type: string,\n     *    label: string,\n     *    placeholder: string,\n     *    hint: string | Functional Component | null,\n     *    required: boolean\n     *  }\n     * ]\n     * ```\n     */\n\n    this.formFields = [];\n    /** Auth state change handler for this components\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n\n    this.usernameAlias = 'username';\n    this.loading = false;\n    this.userInput = this.user ? this.user.username : null;\n    this._signUpAttrs = this.user && this.user.signUpAttrs ? this.user.signUpAttrs : null;\n    this.newFormFields = [];\n  }\n\n  AmplifyConfirmSignUp.prototype.componentWillLoad = function () {\n    checkUsernameAlias(this.usernameAlias);\n    this.buildFormFields();\n  };\n\n  AmplifyConfirmSignUp.prototype.formFieldsHandler = function () {\n    this.buildFormFields();\n  };\n\n  AmplifyConfirmSignUp.prototype.buildDefaultFormFields = function () {\n    var _this = this;\n\n    this.newFormFields = [{\n      type: \"\" + this.usernameAlias,\n      required: true,\n      handleInputChange: this.handleFormFieldInputChange(\"\" + this.usernameAlias),\n      value: this.userInput,\n      disabled: this.userInput ? true : false\n    }, {\n      type: 'code',\n      label: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_LABEL),\n      placeholder: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_PLACEHOLDER),\n      required: true,\n      hint: h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.resendConfirmCode();\n        }\n      }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE))),\n      handleInputChange: this.handleFormFieldInputChange('code')\n    }];\n  };\n\n  AmplifyConfirmSignUp.prototype.buildFormFields = function () {\n    var _this = this;\n\n    if (this.formFields.length === 0) {\n      this.buildDefaultFormFields();\n    } else {\n      var newFields_1 = [];\n      this.formFields.forEach(function (field) {\n        var newField = Object.assign({}, field);\n\n        if (newField.type === 'code') {\n          newField['hint'] = isHintValid(newField) ? h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", {\n            variant: \"anchor\",\n            onClick: function onClick() {\n              return _this.resendConfirmCode();\n            }\n          }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE))) : newField['hint'];\n        }\n\n        newField['handleInputChange'] = function (event) {\n          return _this.handleFormFieldInputWithCallback(event, field);\n        };\n\n        newFields_1.push(newField);\n      });\n      this.newFormFields = newFields_1;\n    }\n  };\n\n  AmplifyConfirmSignUp.prototype.handleFormFieldInputChange = function (fieldType) {\n    var _this = this;\n\n    switch (fieldType) {\n      case 'username':\n      case 'email':\n      case 'phone_number':\n        return function (event) {\n          return _this.userInput = event.target.value;\n        };\n\n      case 'code':\n        return function (event) {\n          return _this.code = event.target.value;\n        };\n\n      default:\n        return;\n    }\n  };\n\n  AmplifyConfirmSignUp.prototype.handleFormFieldInputWithCallback = function (event, field) {\n    var fnToCall = field['handleInputChange'] ? field['handleInputChange'] : function (event, cb) {\n      cb(event);\n    };\n    var callback = this.handleFormFieldInputChange(field.type);\n    fnToCall(event, callback.bind(this));\n  };\n\n  AmplifyConfirmSignUp.prototype.resendConfirmCode = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.resendSignUp !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            if (!this.userInput) throw new Error('Username can not be empty');\n            return [4\n            /*yield*/\n            , Auth.resendSignUp(this.userInput)];\n\n          case 2:\n            _a.sent();\n\n            this.handleAuthStateChange(AuthState.ConfirmSignUp);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_2 = _a.sent();\n            dispatchToastHubEvent(error_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // TODO: Add validation\n  // TODO: Prefix\n\n\n  AmplifyConfirmSignUp.prototype.confirmSignUp = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var confirmSignUpResult, user, _a, error_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.confirmSignUp !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 5, 6, 7]);\n\n            return [4\n            /*yield*/\n            , Auth.confirmSignUp(this.userInput, this.code)];\n\n          case 2:\n            confirmSignUpResult = _b.sent();\n            _a = confirmSignUpResult && this._signUpAttrs;\n            if (!_a) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , Auth.signIn(this.userInput, this._signUpAttrs.password)];\n\n          case 3:\n            _a = _b.sent();\n            _b.label = 4;\n\n          case 4:\n            user = _a;\n            this.handleAuthStateChange(AuthState.SignedIn, user);\n            return [3\n            /*break*/\n            , 7];\n\n          case 5:\n            error_3 = _b.sent();\n            dispatchToastHubEvent(error_3);\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyConfirmSignUp.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      submitButtonText: this.submitButtonText,\n      handleSubmit: this.handleSubmit,\n      secondaryFooterContent: h(\"div\", null, h(\"span\", null, h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.SignIn);\n        }\n      }, I18n.get(Translations.BACK_TO_SIGN_IN))))\n    }, h(\"amplify-auth-fields\", {\n      formFields: this.newFormFields\n    }));\n  };\n\n  Object.defineProperty(AmplifyConfirmSignUp, \"watchers\", {\n    get: function get() {\n      return {\n        \"formFields\": [\"formFieldsHandler\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return AmplifyConfirmSignUp;\n}();\n\nvar logger = new Logger('ForgotPassword');\n\nvar AmplifyForgotPassword =\n/** @class */\nfunction () {\n  function AmplifyForgotPassword(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** The header text of the forgot password section */\n\n    this.headerText = I18n.get(Translations.RESET_YOUR_PASSWORD);\n    /** The text displayed inside of the submit button for the form */\n\n    this.submitButtonText = I18n.get(Translations.SEND_CODE);\n    /** The form fields displayed inside of the forgot password form */\n\n    this.formFields = [];\n    /** The function called when making a request to reset password */\n\n    this.handleSend = function (event) {\n      return _this.send(event);\n    };\n    /** The function called when submitting a new password */\n\n\n    this.handleSubmit = function (event) {\n      return _this.submit(event);\n    };\n    /** Auth state change handler for this component */\n\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n\n    this.usernameAlias = 'username';\n    this.delivery = null;\n    this.loading = false;\n    this.phoneNumber = {\n      countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n      phoneNumberValue: null\n    };\n    this.newFormFields = [];\n    this.forgotPasswordAttrs = {\n      userInput: '',\n      password: '',\n      code: ''\n    };\n  }\n\n  AmplifyForgotPassword.prototype.componentWillLoad = function () {\n    checkUsernameAlias(this.usernameAlias);\n    this.buildFormFields();\n  };\n\n  AmplifyForgotPassword.prototype.formFieldsHandler = function () {\n    this.buildFormFields();\n  };\n\n  AmplifyForgotPassword.prototype.buildFormFields = function () {\n    var _this = this;\n\n    if (this.formFields.length === 0) {\n      this.buildDefaultFormFields();\n    } else {\n      this.formFields.forEach(function (field) {\n        var newField = Object.assign({}, field);\n\n        newField['handleInputChange'] = function (event) {\n          return _this.handleFormFieldInputWithCallback(event, field);\n        };\n\n        _this.newFormFields.push(newField);\n      });\n    }\n  };\n\n  AmplifyForgotPassword.prototype.buildDefaultFormFields = function () {\n    switch (this.usernameAlias) {\n      case 'email':\n        this.newFormFields = [{\n          type: 'email',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('email'),\n          inputProps: {\n            'data-test': 'forgot-password-email-input'\n          }\n        }];\n        break;\n\n      case 'phone_number':\n        this.newFormFields = [{\n          type: 'phone_number',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('phone_number'),\n          inputProps: {\n            'data-test': 'forgot-password-phone-number-input'\n          }\n        }];\n        break;\n\n      case 'username':\n      default:\n        this.newFormFields = [{\n          type: 'username',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('username'),\n          inputProps: {\n            'data-test': 'forgot-password-username-input'\n          }\n        }];\n        break;\n    }\n  };\n\n  AmplifyForgotPassword.prototype.handleFormFieldInputChange = function (fieldType) {\n    var _this = this;\n\n    switch (fieldType) {\n      case 'username':\n      case 'email':\n        return function (event) {\n          return _this.forgotPasswordAttrs.userInput = event.target.value;\n        };\n\n      case 'phone_number':\n        return function (event) {\n          return _this.handlePhoneNumberChange(event);\n        };\n\n      case 'password':\n      case 'code':\n        return function (event) {\n          return _this.forgotPasswordAttrs[fieldType] = event.target.value;\n        };\n\n      default:\n        return;\n    }\n  };\n\n  AmplifyForgotPassword.prototype.handleFormFieldInputWithCallback = function (event, field) {\n    var fnToCall = field['handleInputChange'] ? field['handleInputChange'] : function (event, cb) {\n      cb(event);\n    };\n    var callback = this.handleFormFieldInputChange(field.type);\n    fnToCall(event, callback.bind(this));\n  };\n\n  AmplifyForgotPassword.prototype.handlePhoneNumberChange = function (event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    /** Cognito expects to have a string be passed when signing up. Since the Select input is separate\n     * input from the phone number input, we need to first capture both components values and combined\n     * them together.\n     */\n\n    if (name === COUNTRY_DIAL_CODE_SUFFIX) {\n      this.phoneNumber.countryDialCodeValue = value;\n    }\n\n    if (name === PHONE_SUFFIX) {\n      this.phoneNumber.phoneNumberValue = value;\n    }\n  };\n\n  AmplifyForgotPassword.prototype.send = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.forgotPassword !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n\n            switch (this.usernameAlias) {\n              case 'phone_number':\n                this.forgotPasswordAttrs.userInput = composePhoneNumberInput(this.phoneNumber);\n                break;\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.forgotPassword(this.forgotPasswordAttrs.userInput)];\n\n          case 2:\n            data = _a.sent();\n            logger.debug(data);\n            this.newFormFields = [{\n              type: 'code',\n              required: true,\n              handleInputChange: this.handleFormFieldInputChange('code'),\n              inputProps: {\n                'data-test': 'forgot-password-code-input'\n              }\n            }, {\n              type: 'password',\n              required: true,\n              handleInputChange: this.handleFormFieldInputChange('password'),\n              label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n              placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER)\n            }];\n            this.delivery = data.CodeDeliveryDetails;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_4 = _a.sent();\n            dispatchToastHubEvent(error_4);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyForgotPassword.prototype.submit = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, userInput, code, password, data, error_5;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.forgotPasswordSubmit !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3, 4, 5]);\n\n            _a = this.forgotPasswordAttrs, userInput = _a.userInput, code = _a.code, password = _a.password;\n            return [4\n            /*yield*/\n            , Auth.forgotPasswordSubmit(userInput, code, password)];\n\n          case 2:\n            data = _b.sent();\n            logger.debug(data);\n            this.handleAuthStateChange(AuthState.SignIn);\n            this.delivery = null;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_5 = _b.sent();\n            dispatchToastHubEvent(error_5);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyForgotPassword.prototype.render = function () {\n    var _this = this;\n\n    var submitFn = this.delivery ? function (event) {\n      return _this.handleSubmit(event);\n    } : function (event) {\n      return _this.handleSend(event);\n    };\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      handleSubmit: submitFn,\n      loading: this.loading,\n      secondaryFooterContent: h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.SignIn);\n        },\n        \"data-test\": \"forgot-password-back-to-sign-in-link\"\n      }, I18n.get(Translations.BACK_TO_SIGN_IN)),\n      testDataPrefix: 'forgot-password',\n      submitButtonText: I18n.get(Translations.SEND_CODE)\n    }, h(\"amplify-auth-fields\", {\n      formFields: this.newFormFields\n    }));\n  };\n\n  Object.defineProperty(AmplifyForgotPassword, \"watchers\", {\n    get: function get() {\n      return {\n        \"formFields\": [\"formFieldsHandler\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return AmplifyForgotPassword;\n}();\n\nvar logger$1 = new ConsoleLogger('amplify-require-new-password');\n\nvar AmplifyRequireNewPassword =\n/** @class */\nfunction () {\n  function AmplifyRequireNewPassword(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** The header text of the forgot password section */\n\n    this.headerText = I18n.get(Translations.CHANGE_PASSWORD);\n    /** The text displayed inside of the submit button for the form */\n\n    this.submitButtonText = I18n.get(Translations.CHANGE_PASSWORD_ACTION);\n    /** The function called when submitting a new password */\n\n    this.handleSubmit = function (event) {\n      return _this.completeNewPassword(event);\n    };\n    /** Auth state change handler for this component */\n\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** The form fields displayed inside of the forgot password form */\n\n    this.formFields = [{\n      type: AuthFormField.Password,\n      required: true,\n      handleInputChange: function handleInputChange(event) {\n        return _this.handlePasswordChange(event);\n      },\n      label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n      placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER),\n      inputProps: {\n        'data-test': 'require-new-password-password-input'\n      }\n    }];\n    this.loading = false;\n    this.requiredAttributes = {};\n    this.newFormFields = this.formFields;\n  }\n\n  AmplifyRequireNewPassword.prototype.handleRequiredAttributeInputChange = function (attribute, event) {\n    this.requiredAttributes[attribute] = event.target.value;\n  };\n\n  AmplifyRequireNewPassword.prototype.componentWillLoad = function () {\n    var _this = this;\n\n    if (this.user && this.user.challengeParam.requiredAttributes) {\n      var userRequiredAttributes = this.user.challengeParam.requiredAttributes;\n      userRequiredAttributes.forEach(function (attribute) {\n        var formField = {\n          type: attribute,\n          required: true,\n          label: requiredAttributesMap[attribute].label,\n          placeholder: requiredAttributesMap[attribute].placeholder,\n          handleInputChange: function handleInputChange(event) {\n            return _this.handleRequiredAttributeInputChange(attribute, event);\n          },\n          inputProps: {\n            'data-test': \"require-new-password-\" + attribute + \"-input\"\n          }\n        };\n\n        _this.newFormFields.push(formField);\n      });\n    }\n  };\n\n  AmplifyRequireNewPassword.prototype.handlePasswordChange = function (event) {\n    this.password = event.target.value;\n  };\n\n  AmplifyRequireNewPassword.prototype.checkContact = function (user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!Auth || typeof Auth.verifiedContact !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Auth.verifiedContact(user)];\n\n          case 2:\n            data = _a.sent();\n\n            if (!isEmpty(data.verified)) {\n              this.handleAuthStateChange(AuthState.SignedIn, user);\n            } else {\n              user = Object.assign(user, data);\n              this.handleAuthStateChange(AuthState.VerifyContact, user);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_6 = _a.sent();\n            dispatchToastHubEvent(error_6);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyRequireNewPassword.prototype.completeNewPassword = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.completeNewPassword !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.completeNewPassword(this.user, this.password, this.requiredAttributes)];\n\n          case 2:\n            user = _a.sent();\n            logger$1.debug('complete new password', user);\n\n            switch (user.challengeName) {\n              case ChallengeName.SMSMFA:\n                this.handleAuthStateChange(AuthState.ConfirmSignIn, user);\n                break;\n\n              case ChallengeName.MFASetup:\n                logger$1.debug('TOTP setup', user.challengeParam);\n                this.handleAuthStateChange(AuthState.TOTPSetup, user);\n                break;\n\n              default:\n                this.checkContact(user);\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_7 = _a.sent();\n            dispatchToastHubEvent(error_7);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyRequireNewPassword.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      handleSubmit: this.handleSubmit,\n      loading: this.loading,\n      secondaryFooterContent: h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.SignIn);\n        }\n      }, I18n.get(Translations.BACK_TO_SIGN_IN))\n    }, h(\"amplify-auth-fields\", {\n      formFields: this.newFormFields\n    }));\n  };\n\n  return AmplifyRequireNewPassword;\n}();\n\nvar amplifySignInCss = \":host{--footer-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--footer-font-family:var(--amplify-font-family)}.sign-in-form-footer{font-family:var(--footer-font-family);font-weight:300;font-size:var(--footer-size);color:var(--footer-color);margin-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}@media (min-width: 672px){.sign-in-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}}.sign-in-form-footer *+*{margin-bottom:15px}\";\nvar logger$2 = new Logger('SignIn');\n/**\n * @slot footer - Content is place in the footer of the component\n * @slot primary-footer-content - Content placed on the right side of the footer\n * @slot secondary-footer-content - Content placed on the left side of the footer\n */\n\nvar AmplifySignIn =\n/** @class */\nfunction () {\n  function AmplifySignIn(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Fires when sign in form is submitted */\n\n    this.handleSubmit = function (event) {\n      return _this.signIn(event);\n    };\n    /** Used for header text in sign in component */\n\n\n    this.headerText = I18n.get(Translations.SIGN_IN_HEADER_TEXT);\n    /** Used for the submit button text in sign in component */\n\n    this.submitButtonText = I18n.get(Translations.SIGN_IN_ACTION);\n    /** Auth state change handler for this component */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n\n    this.usernameAlias = 'username';\n    /**\n     * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n     * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n     * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n     * ```\n     * [\n     *  {\n     *    type: string,\n     *    label: string,\n     *    placeholder: string,\n     *    hint: string | Functional Component | null,\n     *    required: boolean\n     *  }\n     * ]\n     * ```\n     */\n\n    this.formFields = [];\n    this.newFormFields = [];\n    /* Whether or not the sign-in component is loading */\n\n    this.loading = false;\n    this.phoneNumber = {\n      countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n      phoneNumberValue: null\n    };\n    this.signInAttributes = {\n      userInput: '',\n      password: ''\n    };\n  }\n\n  AmplifySignIn.prototype.handleFormFieldInputChange = function (fieldType) {\n    var _this = this;\n\n    switch (fieldType) {\n      case 'username':\n      case 'email':\n        return function (event) {\n          return _this.signInAttributes.userInput = event.target.value;\n        };\n\n      case 'phone_number':\n        return function (event) {\n          return _this.handlePhoneNumberChange(event);\n        };\n\n      case 'password':\n        return function (event) {\n          return _this.signInAttributes.password = event.target.value;\n        };\n    }\n  };\n\n  AmplifySignIn.prototype.handleFormFieldInputWithCallback = function (event, field) {\n    var fnToCall = field['handleInputChange'] ? field['handleInputChange'] : function (event, cb) {\n      cb(event);\n    };\n    var callback = this.handleFormFieldInputChange(field.type);\n    fnToCall(event, callback.bind(this));\n  };\n\n  AmplifySignIn.prototype.handlePhoneNumberChange = function (event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    /** Cognito expects to have a string be passed when signing up. Since the Select input is separate\n     * input from the phone number input, we need to first capture both components values and combined\n     * them together.\n     */\n\n    if (name === COUNTRY_DIAL_CODE_SUFFIX) {\n      this.phoneNumber.countryDialCodeValue = value;\n    }\n\n    if (name === PHONE_SUFFIX) {\n      this.phoneNumber.phoneNumberValue = value;\n    }\n  };\n\n  AmplifySignIn.prototype.checkContact = function (user) {\n    var _this = this;\n\n    if (!Auth || typeof Auth.verifiedContact !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    Auth.verifiedContact(user).then(function (data) {\n      if (!isEmpty(data.verified)) {\n        _this.handleAuthStateChange(AuthState.SignedIn, user);\n      } else {\n        user = Object.assign(user, data);\n\n        _this.handleAuthStateChange(AuthState.VerifyContact, user);\n      }\n    });\n  };\n\n  AmplifySignIn.prototype.signIn = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, error_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // avoid submitting the form\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.signIn !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n\n            switch (this.usernameAlias) {\n              case 'phone_number':\n                this.signInAttributes.userInput = composePhoneNumberInput(this.phoneNumber);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.signIn(this.signInAttributes.userInput, this.signInAttributes.password)];\n\n          case 2:\n            user = _a.sent();\n            logger$2.debug(user);\n\n            if (user.challengeName === ChallengeName.SMSMFA || user.challengeName === ChallengeName.SoftwareTokenMFA) {\n              logger$2.debug('confirm user with ' + user.challengeName);\n              this.handleAuthStateChange(AuthState.ConfirmSignIn, user);\n            } else if (user.challengeName === ChallengeName.NewPasswordRequired) {\n              logger$2.debug('require new password', user.challengeParam);\n              this.handleAuthStateChange(AuthState.ResetPassword, user);\n            } else if (user.challengeName === ChallengeName.MFASetup) {\n              logger$2.debug('TOTP setup', user.challengeParam);\n              this.handleAuthStateChange(AuthState.TOTPSetup, user);\n            } else if (user.challengeName === ChallengeName.CustomChallenge && user.challengeParam && user.challengeParam.trigger === 'true') {\n              logger$2.debug('custom challenge', user.challengeParam);\n              this.handleAuthStateChange(AuthState.CustomConfirmSignIn, user);\n            } else {\n              this.checkContact(user);\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_8 = _a.sent();\n            dispatchToastHubEvent(error_8);\n\n            if (error_8.code === 'UserNotConfirmedException') {\n              logger$2.debug('the user is not confirmed');\n              this.handleAuthStateChange(AuthState.ConfirmSignUp, {\n                username: this.signInAttributes.userInput\n              });\n            } else if (error_8.code === 'PasswordResetRequiredException') {\n              logger$2.debug('the user requires a new password');\n              this.handleAuthStateChange(AuthState.ForgotPassword, {\n                username: this.signInAttributes.userInput\n              });\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifySignIn.prototype.buildDefaultFormFields = function () {\n    var _this = this;\n\n    var formFieldInputs = [];\n\n    switch (this.usernameAlias) {\n      case 'email':\n        formFieldInputs.push({\n          type: 'email',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('email'),\n          inputProps: {\n            'data-test': 'sign-in-email-input'\n          }\n        });\n        break;\n\n      case 'phone_number':\n        formFieldInputs.push({\n          type: 'phone_number',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('phone_number'),\n          inputProps: {\n            'data-test': 'sign-in-phone-number-input'\n          }\n        });\n        break;\n\n      case 'username':\n      default:\n        formFieldInputs.push({\n          type: 'username',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('username'),\n          inputProps: {\n            'data-test': 'sign-in-username-input'\n          }\n        });\n        break;\n    }\n\n    formFieldInputs.push({\n      type: 'password',\n      hint: h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.ForgotPassword);\n        },\n        \"data-test\": \"sign-in-forgot-password-link\"\n      }, I18n.get(Translations.RESET_PASSWORD_TEXT))),\n      required: true,\n      handleInputChange: this.handleFormFieldInputChange('password'),\n      inputProps: {\n        'data-test': 'sign-in-password-input'\n      }\n    });\n    this.newFormFields = __spreadArrays(formFieldInputs);\n  };\n\n  AmplifySignIn.prototype.buildFormFields = function () {\n    var _this = this;\n\n    if (this.formFields.length === 0) {\n      this.buildDefaultFormFields();\n    } else {\n      var newFields_2 = [];\n      this.formFields.forEach(function (field) {\n        var newField = Object.assign({}, field); // TODO: handle hint better\n\n        if (newField.type === 'password') {\n          newField['hint'] = isHintValid(newField) ? h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", {\n            variant: \"anchor\",\n            onClick: function onClick() {\n              return _this.handleAuthStateChange(AuthState.ForgotPassword);\n            },\n            \"data-test\": \"sign-in-forgot-password-link\"\n          }, I18n.get(Translations.RESET_PASSWORD_TEXT))) : newField['hint'];\n        }\n\n        newField['handleInputChange'] = function (event) {\n          return _this.handleFormFieldInputWithCallback(event, field);\n        };\n\n        newFields_2.push(newField);\n      });\n      this.newFormFields = newFields_2;\n    }\n  };\n\n  AmplifySignIn.prototype.componentWillLoad = function () {\n    checkUsernameAlias(this.usernameAlias);\n    this.buildFormFields();\n  };\n\n  AmplifySignIn.prototype.formFieldsHandler = function () {\n    this.buildFormFields();\n  };\n\n  AmplifySignIn.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      handleSubmit: this.handleSubmit,\n      testDataPrefix: 'sign-in'\n    }, h(\"amplify-federated-buttons\", {\n      handleAuthStateChange: this.handleAuthStateChange,\n      federated: this.federated\n    }), !isEmpty(this.federated) && h(\"amplify-strike\", null, \"or\"), h(\"amplify-auth-fields\", {\n      formFields: this.newFormFields\n    }), h(\"div\", {\n      slot: \"amplify-form-section-footer\",\n      class: \"sign-in-form-footer\"\n    }, h(\"slot\", {\n      name: \"footer\"\n    }, h(\"slot\", {\n      name: \"secondary-footer-content\"\n    }, h(\"span\", null, I18n.get(Translations.NO_ACCOUNT_TEXT), ' ', h(\"amplify-button\", {\n      variant: \"anchor\",\n      onClick: function onClick() {\n        return _this.handleAuthStateChange(AuthState.SignUp);\n      },\n      \"data-test\": \"sign-in-create-account-link\"\n    }, I18n.get(Translations.CREATE_ACCOUNT_TEXT)))), h(\"slot\", {\n      name: \"primary-footer-content\"\n    }, h(\"amplify-button\", {\n      type: \"submit\",\n      disabled: this.loading,\n      \"data-test\": \"sign-in-sign-in-button\"\n    }, h(\"amplify-loading-spinner\", {\n      style: {\n        display: this.loading ? 'initial' : 'none'\n      }\n    }), h(\"span\", {\n      style: {\n        display: this.loading ? 'none' : 'initial'\n      }\n    }, this.submitButtonText))))));\n  };\n\n  Object.defineProperty(AmplifySignIn, \"watchers\", {\n    get: function get() {\n      return {\n        \"formFields\": [\"formFieldsHandler\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return AmplifySignIn;\n}();\n\nAmplifySignIn.style = amplifySignInCss;\nvar amplifySignUpCss = \":host{--footer-font-family:var(--amplify-font-family);--footer-font-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey)}.sign-up-form-footer{font-family:var(--footer-font-family);font-weight:300;font-size:var(--footer-font-size);color:var(--footer-color);display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}@media (min-width: 672px){.sign-up-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}}.sign-up-form-footer *+*{margin-bottom:15px}\";\n/**\n * @slot footer - Content is place in the footer of the component\n * @slot primary-footer-content - Content placed on the right side of the footer\n * @slot secondary-footer-content - Content placed on the left side of the footer\n */\n\nvar AmplifySignUp =\n/** @class */\nfunction () {\n  function AmplifySignUp(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Fires when sign up form is submitted */\n\n    this.handleSubmit = function (event) {\n      return _this.signUp(event);\n    };\n    /** Used for header text in sign up component */\n\n\n    this.headerText = I18n.get(Translations.SIGN_UP_HEADER_TEXT);\n    /** Used for the submit button text in sign up component */\n\n    this.submitButtonText = I18n.get(Translations.SIGN_UP_SUBMIT_BUTTON_TEXT);\n    /** Used for the submit button text in sign up component */\n\n    this.haveAccountText = I18n.get(Translations.SIGN_UP_HAVE_ACCOUNT_TEXT);\n    /** Used for the submit button text in sign up component */\n\n    this.signInText = I18n.get(Translations.SIGN_IN_TEXT);\n    /**\n     * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n     * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n     * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n     * ```\n     * [\n     *  {\n     *    type: string,\n     *    label: string,\n     *    placeholder: string,\n     *    hint: string | Functional Component | null,\n     *    required: boolean\n     *  }\n     * ]\n     * ```\n     */\n\n    this.formFields = [];\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n\n    this.usernameAlias = 'username'; // private userInput: string | PhoneNumberInterface;\n\n    this.newFormFields = [];\n    this.phoneNumber = {\n      countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n      phoneNumberValue: null\n    };\n    this.loading = false;\n    this.signUpAttributes = {\n      username: '',\n      password: '',\n      attributes: {}\n    };\n  }\n\n  AmplifySignUp.prototype.handleFormFieldInputChange = function (fieldType) {\n    var _this = this;\n\n    switch (fieldType) {\n      case 'username':\n        return function (event) {\n          return _this.signUpAttributes.username = event.target.value;\n        };\n\n      case 'password':\n        return function (event) {\n          return _this.signUpAttributes.password = event.target.value;\n        };\n\n      case 'email':\n        return function (event) {\n          return _this.signUpAttributes.attributes.email = event.target.value;\n        };\n\n      case 'phone_number':\n        return function (event) {\n          return _this.handlePhoneNumberChange(event);\n        };\n\n      default:\n        return function (event) {\n          return _this.signUpAttributes.attributes[fieldType] = event.target.value;\n        };\n    }\n  };\n\n  AmplifySignUp.prototype.handleFormFieldInputWithCallback = function (event, field) {\n    var fnToCall = field['handleInputChange'] ? field['handleInputChange'] : function (event, cb) {\n      cb(event);\n    };\n    var callback = this.handleFormFieldInputChange(field.type);\n    fnToCall(event, callback.bind(this));\n  };\n\n  AmplifySignUp.prototype.handlePhoneNumberChange = function (event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    /** Cognito expects to have a string be passed when signing up. Since the Select input is separate\n     * input from the phone number input, we need to first capture both components values and combined\n     * them together.\n     */\n\n    if (name === COUNTRY_DIAL_CODE_SUFFIX) {\n      this.phoneNumber.countryDialCodeValue = value;\n    }\n\n    if (name === PHONE_SUFFIX) {\n      this.phoneNumber.phoneNumberValue = value;\n    }\n  }; // TODO: Add validation\n  // TODO: Prefix\n\n\n  AmplifySignUp.prototype.signUp = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_9;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event) {\n              event.preventDefault();\n            }\n\n            if (!Auth || typeof Auth.signUp !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            if (this.phoneNumber.phoneNumberValue) {\n              this.signUpAttributes.attributes.phone_number = composePhoneNumberInput(this.phoneNumber);\n            }\n\n            switch (this.usernameAlias) {\n              case 'email':\n              case 'phone_number':\n                this.signUpAttributes.username = this.signUpAttributes.attributes[this.usernameAlias];\n                break;\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Auth.signUp(this.signUpAttributes)];\n\n          case 2:\n            data = _a.sent();\n            this.handleAuthStateChange(AuthState.ConfirmSignUp, Object.assign(Object.assign({}, data.user), {\n              signUpAttrs: this.signUpAttributes\n            }));\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_9 = _a.sent();\n            dispatchToastHubEvent(error_9);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifySignUp.prototype.buildDefaultFormFields = function () {\n    switch (this.usernameAlias) {\n      case 'email':\n        this.newFormFields = [{\n          type: 'email',\n          placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('email'),\n          inputProps: {\n            'data-test': 'sign-up-email-input'\n          }\n        }, {\n          type: 'password',\n          placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('password'),\n          inputProps: {\n            'data-test': 'sign-up-password-input'\n          }\n        }, {\n          type: 'phone_number',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('phone_number'),\n          inputProps: {\n            'data-test': 'sign-up-phone-number-input'\n          }\n        }];\n        break;\n\n      case 'phone_number':\n        this.newFormFields = [{\n          type: 'phone_number',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('phone_number'),\n          inputProps: {\n            'data-test': 'sign-up-phone-number-input'\n          }\n        }, {\n          type: 'password',\n          placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('password'),\n          inputProps: {\n            'data-test': 'sign-up-password-input'\n          }\n        }, {\n          type: 'email',\n          placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('email'),\n          inputProps: {\n            'data-test': 'sign-up-email-input'\n          }\n        }];\n        break;\n\n      case 'username':\n      default:\n        this.newFormFields = [{\n          type: 'username',\n          placeholder: I18n.get(Translations.SIGN_UP_USERNAME_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('username'),\n          inputProps: {\n            'data-test': 'sign-up-username-input'\n          }\n        }, {\n          type: 'password',\n          placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('password'),\n          inputProps: {\n            'data-test': 'sign-up-password-input'\n          }\n        }, {\n          type: 'email',\n          placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('email'),\n          inputProps: {\n            'data-test': 'sign-up-email-input'\n          }\n        }, {\n          type: 'phone_number',\n          required: true,\n          handleInputChange: this.handleFormFieldInputChange('phone_number'),\n          inputProps: {\n            'data-test': 'sign-up-phone-number-input'\n          }\n        }];\n        break;\n    }\n  };\n\n  AmplifySignUp.prototype.buildFormFields = function () {\n    var _this = this;\n\n    if (this.formFields.length === 0) {\n      this.buildDefaultFormFields();\n    } else {\n      var newFields_3 = [];\n      this.formFields.forEach(function (field) {\n        var newField = Object.assign({}, field);\n\n        newField['handleInputChange'] = function (event) {\n          return _this.handleFormFieldInputWithCallback(event, field);\n        };\n\n        newFields_3.push(newField);\n      });\n      this.newFormFields = newFields_3;\n    }\n  };\n\n  AmplifySignUp.prototype.componentWillLoad = function () {\n    checkUsernameAlias(this.usernameAlias);\n    this.buildFormFields();\n  };\n\n  AmplifySignUp.prototype.formFieldsHandler = function () {\n    this.buildFormFields();\n  };\n\n  AmplifySignUp.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      headerText: this.headerText,\n      handleSubmit: this.handleSubmit,\n      testDataPrefix: 'sign-up'\n    }, h(\"amplify-auth-fields\", {\n      formFields: this.newFormFields\n    }), h(\"div\", {\n      class: \"sign-up-form-footer\",\n      slot: \"amplify-form-section-footer\"\n    }, h(\"slot\", {\n      name: \"footer\"\n    }, h(\"slot\", {\n      name: \"secondary-footer-content\"\n    }, h(\"span\", null, this.haveAccountText, ' ', h(\"amplify-button\", {\n      variant: \"anchor\",\n      onClick: function onClick() {\n        return _this.handleAuthStateChange(AuthState.SignIn);\n      },\n      \"data-test\": \"sign-up-sign-in-link\"\n    }, this.signInText))), h(\"slot\", {\n      name: \"primary-footer-content\"\n    }, h(\"amplify-button\", {\n      type: \"submit\",\n      \"data-test\": \"sign-up-create-account-button\"\n    }, h(\"amplify-loading-spinner\", {\n      style: {\n        display: this.loading ? 'initial' : 'none'\n      }\n    }), h(\"span\", {\n      style: {\n        display: this.loading ? 'none' : 'initial'\n      }\n    }, this.submitButtonText))))));\n  };\n\n  Object.defineProperty(AmplifySignUp, \"watchers\", {\n    get: function get() {\n      return {\n        \"formFields\": [\"formFieldsHandler\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return AmplifySignUp;\n}();\n\nAmplifySignUp.style = amplifySignUpCss;\nvar amplifyToastCss = \":host{--background-color:var(--amplify-secondary-tint);--color:var(--amplify-white);--font-size:var(--amplify-text-sm);--font-family:var(--amplify-font-family);--close-icon-color:var(--amplify-white);--close-icon-hover:var(--amplify-red)}.toast-icon{padding-right:5px}.toast{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;position:absolute;top:0;left:0;width:100%;z-index:99;-webkit-box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);padding:16px;background-color:var(--background-color);font-size:var(--font-size);color:var(--color);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:5px;font-family:var(--font-family)}.toast>span{margin-right:10px}.toast-close{margin-left:auto;-ms-flex-item-align:center;align-self:center;position:relative;width:18px;height:18px;overflow:hidden;cursor:pointer;background:transparent;border:none}.toast-close::before,.toast-close::after{content:\\\"\\\";position:absolute;height:2px;width:100%;top:50%;left:0;margin-top:-1px;background:var(--close-icon-color)}.toast-close:hover::before,.toast-close:hover::after{background:var(--close-icon-hover)}.toast-close::before{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.toast-close::after{-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg)}\";\n\nvar AmplifyToast =\n/** @class */\nfunction () {\n  function AmplifyToast(hostRef) {\n    registerInstance(this, hostRef);\n    /** Message to be displayed inside the toast*/\n\n    this.message = '';\n  }\n  /*\n  TODO #170365145: Work on a helper function that will populate and\n  update class colors for success / warning / failure messages\n  */\n\n\n  AmplifyToast.prototype.render = function () {\n    return h(\"div\", {\n      class: \"toast\"\n    }, h(\"amplify-icon\", {\n      class: \"toast-icon\",\n      name: \"warning\"\n    }), this.message ? h(\"span\", null, this.message) : null, h(\"slot\", null), h(\"button\", {\n      class: \"toast-close\",\n      onClick: this.handleClose\n    }));\n  };\n\n  return AmplifyToast;\n}();\n\nAmplifyToast.style = amplifyToastCss;\nvar logger$3 = new Logger('AmplifyVerifyContact');\n\nvar AmplifyVerifyContact =\n/** @class */\nfunction () {\n  function AmplifyVerifyContact(hostRef) {\n    registerInstance(this, hostRef);\n    /** Authentication state handler */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n    this.loading = false;\n  }\n\n  AmplifyVerifyContact.prototype.handleSubmit = function (event) {\n    event.preventDefault();\n    this.verifyAttr ? this.submit(this.code) : this.verify(this.contact);\n  };\n\n  AmplifyVerifyContact.prototype.submit = function (code) {\n    return __awaiter(this, void 0, void 0, function () {\n      var attr, data, error_10;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            attr = this.verifyAttr;\n\n            if (!Auth || typeof Auth.verifyCurrentUserAttributeSubmit !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.verifyCurrentUserAttributeSubmit(attr, code)];\n\n          case 2:\n            data = _a.sent();\n            logger$3.debug(data);\n            this.handleAuthStateChange(AuthState.SignedIn, this.user);\n            this.verifyAttr = null;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_10 = _a.sent();\n            dispatchToastHubEvent(error_10);\n            logger$3.error(error_10);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyVerifyContact.prototype.verify = function (contact) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_11;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!contact) {\n              logger$3.error('Neither Email nor Phone Number selected');\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!Auth || typeof Auth.verifyCurrentUserAttribute !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.verifyCurrentUserAttribute(contact)];\n\n          case 2:\n            data = _a.sent();\n            logger$3.debug(data);\n            this.verifyAttr = contact;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_11 = _a.sent();\n            dispatchToastHubEvent(error_11);\n            logger$3.error(error_11);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmplifyVerifyContact.prototype.handleInputChange = function (event) {\n    var inputName = event.target.name;\n\n    if (inputName === 'code') {\n      this.code = event.target.value;\n    } else if (inputName === 'contact') {\n      this.contact = event.target.value;\n    }\n  };\n\n  AmplifyVerifyContact.prototype.renderSubmit = function () {\n    var _this = this;\n\n    return h(\"div\", null, h(\"amplify-input\", {\n      inputProps: {\n        autocomplete: 'off',\n        'data-test': 'verify-contact-code-input'\n      },\n      name: \"code\",\n      placeholder: I18n.get(Translations.CODE_PLACEHOLDER),\n      handleInputChange: function handleInputChange(event) {\n        return _this.handleInputChange(event);\n      }\n    }));\n  };\n\n  AmplifyVerifyContact.prototype.renderVerify = function () {\n    var _this = this;\n\n    var user = this.user;\n\n    if (!user) {\n      logger$3.debug('No user to verify');\n      return null;\n    }\n\n    var unverified = user.unverified;\n\n    if (!unverified) {\n      logger$3.debug('Unverified variable does not exist on user');\n      return null;\n    }\n\n    var email = unverified.email,\n        phone_number = unverified.phone_number;\n    return h(\"div\", null, email && h(\"amplify-radio-button\", {\n      label: I18n.get(Translations.VERIFY_CONTACT_EMAIL_LABEL),\n      key: \"email\",\n      name: \"contact\",\n      value: \"email\",\n      handleInputChange: function handleInputChange(event) {\n        return _this.handleInputChange(event);\n      },\n      inputProps: {\n        'data-test': 'verify-contact-email-radio'\n      }\n    }), phone_number && h(\"amplify-radio-button\", {\n      label: I18n.get(Translations.VERIFY_CONTACT_PHONE_LABEL),\n      key: \"phone_number\",\n      name: \"contact\",\n      value: \"phone_number\",\n      handleInputChange: function handleInputChange(event) {\n        return _this.handleInputChange(event);\n      },\n      inputProps: {\n        'data-test': 'verify-contact-email-radio'\n      }\n    }));\n  };\n\n  AmplifyVerifyContact.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-form-section\", {\n      handleSubmit: function handleSubmit(event) {\n        return _this.handleSubmit(event);\n      },\n      headerText: I18n.get(Translations.VERIFY_CONTACT_HEADER_TEXT),\n      loading: this.loading,\n      secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", {\n        variant: \"anchor\",\n        onClick: function onClick() {\n          return _this.handleAuthStateChange(AuthState.SignedIn, _this.user);\n        }\n      }, \"Skip\")),\n      submitButtonText: this.verifyAttr ? I18n.get(Translations.VERIFY_CONTACT_SUBMIT_LABEL) : I18n.get(Translations.VERIFY_CONTACT_VERIFY_LABEL)\n    }, this.verifyAttr ? this.renderSubmit() : this.renderVerify());\n  };\n\n  return AmplifyVerifyContact;\n}();\n\nexport { AmplifyConfirmSignIn as amplify_confirm_sign_in, AmplifyConfirmSignUp as amplify_confirm_sign_up, AmplifyForgotPassword as amplify_forgot_password, AmplifyRequireNewPassword as amplify_require_new_password, AmplifySignIn as amplify_sign_in, AmplifySignUp as amplify_sign_up, AmplifyToast as amplify_toast, AmplifyVerifyContact as amplify_verify_contact };"],"sourceRoot":""}